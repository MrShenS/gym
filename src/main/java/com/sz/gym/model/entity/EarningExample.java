package com.sz.gym.model.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class EarningExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    public EarningExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEarningIdIsNull() {
            addCriterion("earning_id is null");
            return (Criteria) this;
        }

        public Criteria andEarningIdIsNotNull() {
            addCriterion("earning_id is not null");
            return (Criteria) this;
        }

        public Criteria andEarningIdEqualTo(Integer value) {
            addCriterion("earning_id =", value, "earningId");
            return (Criteria) this;
        }

        public Criteria andEarningIdNotEqualTo(Integer value) {
            addCriterion("earning_id <>", value, "earningId");
            return (Criteria) this;
        }

        public Criteria andEarningIdGreaterThan(Integer value) {
            addCriterion("earning_id >", value, "earningId");
            return (Criteria) this;
        }

        public Criteria andEarningIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("earning_id >=", value, "earningId");
            return (Criteria) this;
        }

        public Criteria andEarningIdLessThan(Integer value) {
            addCriterion("earning_id <", value, "earningId");
            return (Criteria) this;
        }

        public Criteria andEarningIdLessThanOrEqualTo(Integer value) {
            addCriterion("earning_id <=", value, "earningId");
            return (Criteria) this;
        }

        public Criteria andEarningIdIn(List<Integer> values) {
            addCriterion("earning_id in", values, "earningId");
            return (Criteria) this;
        }

        public Criteria andEarningIdNotIn(List<Integer> values) {
            addCriterion("earning_id not in", values, "earningId");
            return (Criteria) this;
        }

        public Criteria andEarningIdBetween(Integer value1, Integer value2) {
            addCriterion("earning_id between", value1, value2, "earningId");
            return (Criteria) this;
        }

        public Criteria andEarningIdNotBetween(Integer value1, Integer value2) {
            addCriterion("earning_id not between", value1, value2, "earningId");
            return (Criteria) this;
        }

        public Criteria andEarningSourceIsNull() {
            addCriterion("earning_source is null");
            return (Criteria) this;
        }

        public Criteria andEarningSourceIsNotNull() {
            addCriterion("earning_source is not null");
            return (Criteria) this;
        }

        public Criteria andEarningSourceEqualTo(String value) {
            addCriterion("earning_source =", value, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningSourceNotEqualTo(String value) {
            addCriterion("earning_source <>", value, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningSourceGreaterThan(String value) {
            addCriterion("earning_source >", value, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningSourceGreaterThanOrEqualTo(String value) {
            addCriterion("earning_source >=", value, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningSourceLessThan(String value) {
            addCriterion("earning_source <", value, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningSourceLessThanOrEqualTo(String value) {
            addCriterion("earning_source <=", value, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningSourceLike(String value) {
            addCriterion("earning_source like", value, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningSourceNotLike(String value) {
            addCriterion("earning_source not like", value, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningSourceIn(List<String> values) {
            addCriterion("earning_source in", values, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningSourceNotIn(List<String> values) {
            addCriterion("earning_source not in", values, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningSourceBetween(String value1, String value2) {
            addCriterion("earning_source between", value1, value2, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningSourceNotBetween(String value1, String value2) {
            addCriterion("earning_source not between", value1, value2, "earningSource");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionIsNull() {
            addCriterion("earning_description is null");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionIsNotNull() {
            addCriterion("earning_description is not null");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionEqualTo(Integer value) {
            addCriterion("earning_description =", value, "earningDescription");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionNotEqualTo(Integer value) {
            addCriterion("earning_description <>", value, "earningDescription");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionGreaterThan(Integer value) {
            addCriterion("earning_description >", value, "earningDescription");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionGreaterThanOrEqualTo(Integer value) {
            addCriterion("earning_description >=", value, "earningDescription");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionLessThan(Integer value) {
            addCriterion("earning_description <", value, "earningDescription");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionLessThanOrEqualTo(Integer value) {
            addCriterion("earning_description <=", value, "earningDescription");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionIn(List<Integer> values) {
            addCriterion("earning_description in", values, "earningDescription");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionNotIn(List<Integer> values) {
            addCriterion("earning_description not in", values, "earningDescription");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionBetween(Integer value1, Integer value2) {
            addCriterion("earning_description between", value1, value2, "earningDescription");
            return (Criteria) this;
        }

        public Criteria andEarningDescriptionNotBetween(Integer value1, Integer value2) {
            addCriterion("earning_description not between", value1, value2, "earningDescription");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyIsNull() {
            addCriterion("earning_money is null");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyIsNotNull() {
            addCriterion("earning_money is not null");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyEqualTo(Double value) {
            addCriterion("earning_money =", value, "earningMoney");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyNotEqualTo(Double value) {
            addCriterion("earning_money <>", value, "earningMoney");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyGreaterThan(Double value) {
            addCriterion("earning_money >", value, "earningMoney");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyGreaterThanOrEqualTo(Double value) {
            addCriterion("earning_money >=", value, "earningMoney");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyLessThan(Double value) {
            addCriterion("earning_money <", value, "earningMoney");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyLessThanOrEqualTo(Double value) {
            addCriterion("earning_money <=", value, "earningMoney");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyIn(List<Double> values) {
            addCriterion("earning_money in", values, "earningMoney");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyNotIn(List<Double> values) {
            addCriterion("earning_money not in", values, "earningMoney");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyBetween(Double value1, Double value2) {
            addCriterion("earning_money between", value1, value2, "earningMoney");
            return (Criteria) this;
        }

        public Criteria andEarningMoneyNotBetween(Double value1, Double value2) {
            addCriterion("earning_money not between", value1, value2, "earningMoney");
            return (Criteria) this;
        }

        public Criteria andEarningUserIsNull() {
            addCriterion("earning_user is null");
            return (Criteria) this;
        }

        public Criteria andEarningUserIsNotNull() {
            addCriterion("earning_user is not null");
            return (Criteria) this;
        }

        public Criteria andEarningUserEqualTo(String value) {
            addCriterion("earning_user =", value, "earningUser");
            return (Criteria) this;
        }

        public Criteria andEarningUserNotEqualTo(String value) {
            addCriterion("earning_user <>", value, "earningUser");
            return (Criteria) this;
        }

        public Criteria andEarningUserGreaterThan(String value) {
            addCriterion("earning_user >", value, "earningUser");
            return (Criteria) this;
        }

        public Criteria andEarningUserGreaterThanOrEqualTo(String value) {
            addCriterion("earning_user >=", value, "earningUser");
            return (Criteria) this;
        }

        public Criteria andEarningUserLessThan(String value) {
            addCriterion("earning_user <", value, "earningUser");
            return (Criteria) this;
        }

        public Criteria andEarningUserLessThanOrEqualTo(String value) {
            addCriterion("earning_user <=", value, "earningUser");
            return (Criteria) this;
        }

        public Criteria andEarningUserLike(String value) {
            addCriterion("earning_user like", value, "earningUser");
            return (Criteria) this;
        }

        public Criteria andEarningUserNotLike(String value) {
            addCriterion("earning_user not like", value, "earningUser");
            return (Criteria) this;
        }

        public Criteria andEarningUserIn(List<String> values) {
            addCriterion("earning_user in", values, "earningUser");
            return (Criteria) this;
        }

        public Criteria andEarningUserNotIn(List<String> values) {
            addCriterion("earning_user not in", values, "earningUser");
            return (Criteria) this;
        }

        public Criteria andEarningUserBetween(String value1, String value2) {
            addCriterion("earning_user between", value1, value2, "earningUser");
            return (Criteria) this;
        }

        public Criteria andEarningUserNotBetween(String value1, String value2) {
            addCriterion("earning_user not between", value1, value2, "earningUser");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table earning
     *
     * @mbggenerated do_not_delete_during_merge Sun Mar 15 19:02:21 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table earning
     *
     * @mbggenerated Sun Mar 15 19:02:21 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}